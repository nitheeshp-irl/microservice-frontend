name: Docker Build and Versioned Release

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ECR_REGISTRY: 194722430197.dkr.ecr.us-west-2.amazonaws.com
  ECR_REPOSITORY: training/craftista_frontend_dev 
  AWS_REGION: us-west-2

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            buildx-${{ runner.os }}-

      - name: Build and tag Docker image
        env:
          SEMVER: ${GITHUB_REF#refs/tags/v}
        run: |
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            --load .

      - name: Run container tests
        env:
          SEMVER: ${GITHUB_REF#refs/tags/v}
        run: |
          docker run -d -p 3000:3000 --name test-container $ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER
          for i in {1..10}; do
            if curl -s http://localhost:3000; then
              echo "Container ready!"
              exit 0
            fi
            sleep 5
          done
          echo "Container failed to start"
          docker logs test-container
          exit 1

      - name: Push versioned image
        if: success() && startsWith(github.ref, 'refs/tags/')
        env:
          SEMVER: ${GITHUB_REF#refs/tags/v}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Cleanup
        if: always()
        run: docker rm -f test-container || true
